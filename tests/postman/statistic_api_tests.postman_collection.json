{
	"info": {
		"_postman_id": "49351dd8-02e5-4a99-abee-c771b3253cc6",
		"name": "Statistic API Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "44102729",
		"_collection_link": "https://thanchida.postman.co/workspace/741435cf-f8b3-4a02-808c-d53c806e0cd7/collection/44102729-49351dd8-02e5-4a99-abee-c771b3253cc6?action=share&source=collection_link&creator=44102729"
	},
	"item": [
		{
			"name": "weather_data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response contains light and temperature and humidity and pm2_5\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"data\");",
							"    if (jsonData.data.length > 0) {",
							"        pm.expect(jsonData.data[0]).to.have.property(\"light\");",
							"        pm.expect(jsonData.data[0]).to.have.property(\"temperature\");",
							"        pm.expect(jsonData.data[0]).to.have.property(\"humidity\");",
							"        pm.expect(jsonData.data[0]).to.have.property(\"pm2_5\");",
							"    }",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/api/statistic/weather_data",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"statistic",
						"weather_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "correlation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Correlation matrix contains all expected keys\", function () {",
							"    const jsonData = pm.response.json();",
							"    const corr = jsonData[\"data\"];",
							"    const expected_keys = [\"light\", \"temperature\", \"humidity\", \"pm2_5\"];",
							"",
							"    expected_keys.forEach(function(key) {",
							"        pm.expect(corr).to.have.property(key);",
							"        expected_keys.forEach(function(innerKey) {",
							"            pm.expect(corr[key]).to.have.property(innerKey);",
							"            pm.expect(typeof corr[key][innerKey]).to.eql(\"number\");",
							"        });",
							"    });",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/api/statistic/correlation",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"statistic",
						"correlation"
					]
				}
			},
			"response": []
		},
		{
			"name": "descriptive",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has expected structure\", function () {",
							"    let jsonData = pm.response.json();",
							"",
							"    pm.expect(jsonData).to.have.property(\"data\");",
							"",
							"    const expectedKeys = [\"light\", \"temperature\", \"humidity\", \"pm2_5\"];",
							"    expectedKeys.forEach(function (key) {",
							"        pm.expect(jsonData.data).to.have.property(key);",
							"",
							"        const stats = jsonData.data[key];",
							"        for (let stat_name in stats) {",
							"            pm.expect(typeof stats[stat_name]).to.eql(\"number\");",
							"        }",
							"    });",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/api/statistic/descriptive",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"statistic",
						"descriptive"
					]
				}
			},
			"response": []
		}
	]
}